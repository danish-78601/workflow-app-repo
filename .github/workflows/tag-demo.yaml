name: Tag on Push to Main

on:
  push:
    branches:
      - master

jobs:
  tag_repo:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false  # Ensures that the token is not stored in the repo's config

      - name: Generate GitHub App token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api \"/users/${{ steps.app-token.outputs.app-slug }}[bot]\" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com>'

      # git commands like commit work using the bot user
      - name: Get the current commit hash
        id: get_commit
        run: echo "::set-output name=sha::$(git rev-parse --short HEAD)"

      - name: Create Git tag
        id: create_tag
        run: |
          git tag v1.0.${{ github.run_number }}-${{ steps.get_commit.outputs.sha }}
          git push origin v1.0.${{ github.run_number }}-${{ steps.get_commit.outputs.sha }}

      - name: Tagging done
        run: echo "Tagged with v1.0.${{ github.run_number }}-${{ steps.get_commit.outputs.sha }}"
